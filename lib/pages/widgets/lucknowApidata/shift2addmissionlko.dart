import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:async';
import 'dart:convert';

import 'package:miut/api/lucknow_api.dart';
import 'package:miut/model/lucknow/shift2addmissiondatalko.dart';

class Shift2AdmissionLko extends StatefulWidget {
  @override
  _Shift2AdmissionLkoState createState() => _Shift2AdmissionLkoState();
}

class _Shift2AdmissionLkoState extends State<Shift2AdmissionLko> {
  late Future<Shift2AddmidionLkoModel> futureData;

  @override
  void initState() {
    super.initState();
    futureData = fetchData();
  }

  Future<Shift2AddmidionLkoModel> fetchData() async {
    const apiUrl =
        'https://luckstd.muituniversity.in/api/student/GetAdmissionN'; // Replace with your API URL

    final response = await http.get(Uri.parse(apiUrl));

    if (response.statusCode == 200) {
      return Shift2AddmidionLkoModel.fromJson(json.decode(response.body));
    } else {
      throw ('Data not found');
    }
  }

  static double checkDouble(dynamic value) {
    if (value is String) {
      return double.parse(value);
    } else {
      return value.toDouble();
    }
  }

  @override
  Widget build(BuildContext context) {
    return FutureBuilder<Shift2AddmidionLkoModel>(
      future: futureData,
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return SizedBox(
            height: 30,
            width: 30,
            child: CircularProgressIndicator(),
          ); // Display loading indicator
        } else if (snapshot.hasError) {
          return Text('Error: ${snapshot.error}');
        } else {
          final album = snapshot.data!;

          return Center(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Padding(
                  padding: const EdgeInsets.only(top: 10),
                  child: Text(
                    '${album.data?.shift2Admission ?? "Empty"} ',
                    style: const TextStyle(
                        color: Colors.white,
                        fontWeight: FontWeight.bold,
                        fontSize: 18),
                  ),
                ),
                const Text("Shift 2 Admission",
                    textAlign: TextAlign.center,
                    style: TextStyle(color: Colors.white, fontSize: 18)),
              ],
            ),
          );
        }
      },
    );
  }
}

class PhdReg extends StatefulWidget {
  @override
  _PhdRegState createState() => _PhdRegState();
}

class _PhdRegState extends State<PhdReg> {
  late Future<Shift2AddmidionLkoModel> futureData;

  @override
  void initState() {
    super.initState();
    futureData = LucknowAPi().Shift2AddmissionLko();
  }

  // Future<Autogenerated> fetchData() async {
  //   const apiUrl =
  //       'https://luckstd.muituniversity.in/api/student/GetAdmissionN'; // Replace with your API URL

  //   final response = await http.get(Uri.parse(apiUrl));

  //   if (response.statusCode == 200) {
  //     return Autogenerated.fromJson(json.decode(response.body));
  //   } else {
  //     throw Exception('Failed to load data from API');
  //   }
  // }

  static double checkDouble(dynamic value) {
    if (value is String) {
      return double.parse(value);
    } else {
      return value.toDouble();
    }
  }

  @override
  Widget build(BuildContext context) {
    return FutureBuilder<Shift2AddmidionLkoModel>(
      future: futureData,
      builder: (context, snapshot) {
        if (snapshot.connectionState == ConnectionState.waiting) {
          return SizedBox(
            height: 30,
            width: 30,
            child: CircularProgressIndicator(),
          ); // Display loading indicator
        } else if (snapshot.hasError) {
          return Text('Error: ${snapshot.error}');
        } else {
          final album = snapshot.data!;

          return Center(
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Padding(
                  padding: const EdgeInsets.only(top: 10),
                  child: Text(
                    '${album.data?.phDReg ?? "Empty"} ',
                    style: const TextStyle(
                        color: Colors.white,
                        fontWeight: FontWeight.bold,
                        fontSize: 19),
                  ),
                ),
                Text(
                  'PHD Admission',
                  style: const TextStyle(color: Colors.white, fontSize: 18),
                ),
              ],
            ),
          );
        }
      },
    );
  }
}
